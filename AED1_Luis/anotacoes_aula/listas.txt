Listas Circulares e Duplamente Encadeadas

Circulares:

    -"ultimo" elemento aponta para o "primeiro" elemento da Listas
    -A cabeça aponta para um elemento inserido inicialmente na lista

//--------------------//
    retirar:

    -ao retirar o primeiro nó da lista, o qual o ponteiro aponta, o anterior ao nó aponta, para onde o nó apontava e a cabeça aponta para esse anterior.


//--------------------------------------//

Listas Duplamente Encadeadas:

    -cada nó liga ao próximo nó e ao anterior a ele.
    -cada extremidade também possui um ptr NULL.
    
        //  typedef struct no2{
        //      int info;
        //      struct no2 *prox;
        //      struct no2 *ant;
        //  }Lista2, No2;

    -ao inserir um novo nó, é inserido no começo, o anterior a ele aponta para NULL e a cabeça aponta para o novo nó.




IMPLEMENTAÇÃO:

Lista2* inserir(Lista2 *l, int info){

    No2 *novo;

    novo = malloc(sizeof(No2));
    novo -> info = info;
    novo -> ant = NULL;
    novo -> prox = l;

    if(l != NULL){
        l->ant = novo;
    }

    return novo;
}



//--------------------------------------//
    retirar:

    -removendo o primeiro elemento: o ponteiro aponta para o 2º nó, esse nó aponta para NULL e o primeiro nó é removido;
    -removendo algo que não é o primeiro da lista: basicamente pular um nó, vc da um jeito



IMPLEMENTAÇÃO:

Lista2* remover(Lista2 *l, int info){

    Lista2 *p=l;

    while(p != NULL && p->info != info)
        p=p->prox;

    /* não achou o elemento: retorna lista inalterada */
    if(p == NULL)
        return l;

    /* retira o elemento encadeamento */
    if(l == p)
        l = p->prox;
    else
        p->ant->prox = p->prox;

    if(p->prox != NULL)
        p->prox->ant = p->ant;

    free(p);
    return l;
}



//--------------------------------------//

Lista Circular Duplamente Encadeada

    -o "ultimo" elemento aponta para o "primeiro" elemento e o "priemeiro" elemento aponta para o "ultimo".
    -ao inserir o primeiro elemento, ele o prox e ant apontam para ele mesmo.
    -a cada novo elemento o prox e anterior deles apontam um para o outro, faz um desenho mental, o ngc é maluco.
    
//-------------------------//
    retirar:

    -nó a ser removido não é o primeiro: faz um desenho maluco, mas a logica da.
    -primeiro nó a ser removido: ponteiro aponta para o anterior do primeiro nó, e o resto se resolve. Faz um desenho.
    